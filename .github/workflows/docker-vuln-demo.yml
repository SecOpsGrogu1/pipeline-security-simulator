name: Docker Vulnerability Demo & Scan

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build-and-scan:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build vuln image
        run: docker build -f Dockerfile.vuln -t demo-vuln:latest .
      
      - name: Build clean image
        run: docker build -f Dockerfile.clean -t demo-clean:latest .

      - name: Scan vuln image (with SARIF)
        id: scan_vuln_sarif
        continue-on-error: true
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: demo-vuln:latest
          format: 'sarif'
          output: 'trivy-results.sarif'
          severity: HIGH,CRITICAL

      - name: Upload SARIF results to GitHub
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: trivy-results.sarif

      - name: Scan vuln image (table format for display)
        id: scan_vuln_table
        continue-on-error: true
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: demo-vuln:latest
          format: table
          exit-code: 1
          severity: HIGH,CRITICAL

      - name: Scan clean image (should pass)
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: demo-clean:latest
          format: table
          exit-code: 1
          severity: HIGH,CRITICAL

      - name: Fail if vuln image has vulnerabilities
        if: steps.scan_vuln_table.outcome == 'failure'
        run: |
          echo "Vulnerabilities detected in demo-vuln image. Failing pipeline as expected."
          exit 1
